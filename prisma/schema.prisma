// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider              = "prisma-client-js"
  previewFeatures       = ["referentialIntegrity"]
}

generator typegraphql {
  provider            = "typegraphql-prisma"
  previewFeatures     = ["referentialIntegrity"]
  output              = "../prisma/generated/type-graphql"
  emitTranspiledCode  = true
}

datasource db {
  provider              = "mysql"
  url                   = env("DATABASE_URL")
  referentialIntegrity  = "prisma"
}

// TODO: 읍면동 정보 추가

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

model User {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  deleted       DateTime?
  phone         Int?      @unique
  email         String?   @unique
  name          String
  password      String    @default("")
  role          Role      @default(USER)
  tradePosts    TradePost[]
  tradeInterest TradeInterest[]
}

enum SalesType {
  SALE      // 판매중
  RESERVED  // 예약중
  SOLD_OUT  // 판매완료
}

model TradeCategory {
  id        Int   @id @default(autoincrement())
  name      String
  tradePost TradePost[]
}

model TradePost {
  id            Int           @id @default(autoincrement())
  title         String
  content       String        @db.Text
  price         Int
  salesType     SalesType     @default(SALE)
  hitCount      Int           @db.UnsignedInt @default(0)
  isHide        Boolean       @default(false)
  isPriceOffer  Boolean       @default(false)
  user          User          @relation(fields: [userId], references: [id])
  userId        Int
  category      TradeCategory @relation(fields: [categoryId], references: [id])
  categoryId    Int
  tradeInterest TradeInterest[]
  // TODO: 읍면동 정보
  // TODO: 이미지
}

model TradeInterest {
  tradePost   TradePost @relation(fields: [tradePostId], references: [id])
  tradePostId Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  @@id([tradePostId, userId])
}